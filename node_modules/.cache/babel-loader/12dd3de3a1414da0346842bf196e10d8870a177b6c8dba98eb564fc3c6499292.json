{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\guitar_tabs\\\\src\\\\Fretboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './Fretboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fretboard = ({\n  notes,\n  currentNote,\n  isPlaying\n}) => {\n  _s();\n  const strings = ['e', 'B', 'G', 'D', 'A', 'E'];\n  const frets = Array.from({\n    length: 12\n  }, (_, i) => i);\n  useEffect(() => {\n    console.log('Current notes:', notes);\n    console.log('Active note:', currentNote);\n  }, [notes, currentNote]);\n  const isNoteActive = (string, fret) => {\n    if (!currentNote || !notes) return false;\n    const activeNotes = Array.isArray(currentNote) ? currentNote : [currentNote];\n    console.log('Checking active notes:', activeNotes);\n    return activeNotes.some(noteName => {\n      if (!notes[noteName]) return false;\n      console.log(`Checking positions for note ${noteName}:`, notes[noteName]);\n      return notes[noteName].some(pos => {\n        const match = pos.string === string && pos.fret === fret;\n        if (match) console.log(`Found match at string ${string}, fret ${fret}`);\n        return match;\n      });\n    });\n  };\n  const getNotePosition = (string, fret) => {\n    const stringIndex = strings.indexOf(string);\n    // Align with string positions from CSS\n    const stringPosition = 10 + stringIndex * 15;\n    // Align with fret positions from CSS\n    const fretPosition = 8.33 * (fret + 1);\n    return {\n      top: `${stringPosition}%`,\n      left: `${fretPosition}%`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fretboard\",\n    children: [frets.map(fret => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fret fret-${fret + 1}`\n    }, `fret-${fret}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)), strings.map((string, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `string string-${i + 1}`\n    }, `string-${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)), strings.map(string => frets.map(fret => {\n      const active = isNoteActive(string, fret);\n      if (active) {\n        console.log(`Rendering note at string ${string}, fret ${fret}`);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `note-marker ${isPlaying ? 'playing' : ''}`,\n          style: getNotePosition(string, fret)\n        }, `note-${string}-${fret}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this);\n      }\n      return null;\n    }))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Fretboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Fretboard;\nexport default Fretboard;\nvar _c;\n$RefreshReg$(_c, \"Fretboard\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Fretboard","notes","currentNote","isPlaying","_s","strings","frets","Array","from","length","_","i","console","log","isNoteActive","string","fret","activeNotes","isArray","some","noteName","pos","match","getNotePosition","stringIndex","indexOf","stringPosition","fretPosition","top","left","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","active","style","_c","$RefreshReg$"],"sources":["C:/Users/Rahul/guitar_tabs/src/Fretboard.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport './Fretboard.css';\r\n\r\nconst Fretboard = ({ notes, currentNote, isPlaying }) => {\r\n  const strings = ['e', 'B', 'G', 'D', 'A', 'E'];\r\n  const frets = Array.from({ length: 12 }, (_, i) => i);\r\n\r\n  useEffect(() => {\r\n    console.log('Current notes:', notes);\r\n    console.log('Active note:', currentNote);\r\n  }, [notes, currentNote]);\r\n\r\n  const isNoteActive = (string, fret) => {\r\n    if (!currentNote || !notes) return false;\r\n    \r\n    const activeNotes = Array.isArray(currentNote) ? currentNote : [currentNote];\r\n    console.log('Checking active notes:', activeNotes);\r\n    \r\n    return activeNotes.some(noteName => {\r\n      if (!notes[noteName]) return false;\r\n      console.log(`Checking positions for note ${noteName}:`, notes[noteName]);\r\n      return notes[noteName].some(pos => {\r\n        const match = pos.string === string && pos.fret === fret;\r\n        if (match) console.log(`Found match at string ${string}, fret ${fret}`);\r\n        return match;\r\n      });\r\n    });\r\n  };\r\n\r\n  const getNotePosition = (string, fret) => {\r\n    const stringIndex = strings.indexOf(string);\r\n    // Align with string positions from CSS\r\n    const stringPosition = 10 + (stringIndex * 15);\r\n    // Align with fret positions from CSS\r\n    const fretPosition = 8.33 * (fret + 1);\r\n    return { top: `${stringPosition}%`, left: `${fretPosition}%` };\r\n  };\r\n\r\n  return (\r\n    <div className=\"fretboard\">\r\n      {/* Render frets */}\r\n      {frets.map((fret) => (\r\n        <div key={`fret-${fret}`} className={`fret fret-${fret + 1}`} />\r\n      ))}\r\n      \r\n      {/* Render strings */}\r\n      {strings.map((string, i) => (\r\n        <div key={`string-${i}`} className={`string string-${i + 1}`} />\r\n      ))}\r\n      \r\n      {/* Render note markers */}\r\n      {strings.map(string =>\r\n        frets.map(fret => {\r\n          const active = isNoteActive(string, fret);\r\n          if (active) {\r\n            console.log(`Rendering note at string ${string}, fret ${fret}`);\r\n            return (\r\n              <div\r\n                key={`note-${string}-${fret}`}\r\n                className={`note-marker ${isPlaying ? 'playing' : ''}`}\r\n                style={getNotePosition(string, fret)}\r\n              />\r\n            );\r\n          }\r\n          return null;\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fretboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}