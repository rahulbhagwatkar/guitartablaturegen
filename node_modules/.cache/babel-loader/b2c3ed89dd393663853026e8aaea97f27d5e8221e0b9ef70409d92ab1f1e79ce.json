{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\guitar_tabs\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport './index.css';\nimport Fretboard from './Fretboard.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState({});\n  const [currentNote, setCurrentNote] = useState(null);\n  const [audioSrc, setAudioSrc] = useState(null);\n  const [timeMap, setTimeMap] = useState([]);\n  const [error, setError] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const audioRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const animationFrameRef = useRef(null);\n  const initializeAudioContext = () => {\n    if (!audioContextRef.current) {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      analyserRef.current.fftSize = 2048;\n    }\n  };\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) {\n      setError('No file selected');\n      return;\n    }\n\n    // Reset states\n    setError(null);\n    setNotes({});\n    setTimeMap([]);\n    setCurrentNote(null);\n    setAudioSrc(null);\n    setIsPlaying(false);\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      console.log('Uploading file:', file.name);\n      const response = await axios.post('http://localhost:3001/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        validateStatus: false // Don't throw error on non-2xx status\n      });\n      console.log('Raw server response:', response.data);\n      console.log('Notes received:', response.data.notes);\n      console.log('Timing received:', response.data.timing);\n      if (response.status !== 200) {\n        var _response$data, _response$data2;\n        throw new Error(((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.details) || ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.error) || 'Server error');\n      }\n      if (!response.data.notes || !response.data.timing) {\n        throw new Error('Invalid response format from server');\n      }\n      setNotes(response.data.notes);\n      setTimeMap(response.data.timing);\n\n      // Create audio URL after successful processing\n      const audioUrl = URL.createObjectURL(file);\n      setAudioSrc(audioUrl);\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error('Full upload error:', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.details) || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message || 'Error processing file');\n      if (audioSrc) {\n        URL.revokeObjectURL(audioSrc);\n        setAudioSrc(null);\n      }\n    }\n  };\n  const updateFretboard = () => {\n    if (!audioRef.current || !timeMap.length || !isPlaying) return;\n    const currentTime = audioRef.current.currentTime;\n\n    // Add debug logging\n    console.log('Current time:', currentTime);\n    const currentNotes = timeMap.filter(({\n      start,\n      end\n    }) => {\n      const startTime = parseFloat(start);\n      const endTime = parseFloat(end);\n      const isInRange = currentTime >= startTime && currentTime <= endTime;\n      if (isInRange) {\n        console.log(`Note in range: start=${startTime}, end=${endTime}`);\n      }\n      return isInRange;\n    });\n    if (currentNotes.length > 0) {\n      console.log('Found current notes:', currentNotes);\n      const noteValues = currentNotes.map(note => note.note);\n      console.log('Setting current notes:', noteValues);\n      setCurrentNote(noteValues);\n    } else {\n      setCurrentNote(null);\n    }\n    animationFrameRef.current = requestAnimationFrame(updateFretboard);\n  };\n  useEffect(() => {\n    const audio = audioRef.current;\n    if (!audio) return;\n    const handlePlay = () => {\n      var _audioContextRef$curr;\n      setIsPlaying(true);\n      if (((_audioContextRef$curr = audioContextRef.current) === null || _audioContextRef$curr === void 0 ? void 0 : _audioContextRef$curr.state) === 'suspended') {\n        audioContextRef.current.resume();\n      }\n      animationFrameRef.current = requestAnimationFrame(updateFretboard);\n    };\n    const handlePause = () => {\n      setIsPlaying(false);\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n    const handleEnded = () => {\n      setIsPlaying(false);\n      setCurrentNote(null);\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n    audio.addEventListener('play', handlePlay);\n    audio.addEventListener('pause', handlePause);\n    audio.addEventListener('ended', handleEnded);\n\n    // Connect audio to analyser when source changes\n    if (audioContextRef.current && analyserRef.current) {\n      const source = audioContextRef.current.createMediaElementSource(audio);\n      source.connect(analyserRef.current);\n      analyserRef.current.connect(audioContextRef.current.destination);\n    }\n    return () => {\n      audio.removeEventListener('play', handlePlay);\n      audio.removeEventListener('pause', handlePause);\n      audio.removeEventListener('ended', handleEnded);\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n    };\n  }, [timeMap]);\n\n  // Add debug logging when notes are received\n  useEffect(() => {\n    console.log('Notes dictionary updated:', notes);\n  }, [notes]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      if (audioSrc) {\n        URL.revokeObjectURL(audioSrc);\n      }\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current);\n      }\n      if (audioContextRef.current) {\n        audioContextRef.current.close();\n      }\n    };\n  }, [audioSrc]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Guitar Tabs App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"audio/*\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        margin: '10px 0'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), audioSrc && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        controls: true,\n        src: audioSrc,\n        onError: e => {\n          console.error('Audio error:', e);\n          setError('Error playing audio file');\n        },\n        children: \"Your browser does not support the audio element.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Fretboard, {\n        notes: notes,\n        currentNote: currentNote,\n        isPlaying: isPlaying\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Note: \", currentNote || 'None']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Notes: \", Object.keys(notes).length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7NoYRSTLrC71COOWjkXJUXeoJag=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","Fretboard","jsxDEV","_jsxDEV","App","_s","notes","setNotes","currentNote","setCurrentNote","audioSrc","setAudioSrc","timeMap","setTimeMap","error","setError","isPlaying","setIsPlaying","audioRef","audioContextRef","analyserRef","animationFrameRef","initializeAudioContext","current","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","handleFileUpload","event","file","target","files","formData","FormData","append","console","log","name","response","post","headers","validateStatus","data","timing","status","_response$data","_response$data2","Error","details","audioUrl","URL","createObjectURL","_error$response","_error$response$data","_error$response2","_error$response2$data","message","revokeObjectURL","updateFretboard","length","currentTime","currentNotes","filter","start","end","startTime","parseFloat","endTime","isInRange","noteValues","map","note","requestAnimationFrame","audio","handlePlay","_audioContextRef$curr","state","resume","handlePause","cancelAnimationFrame","handleEnded","addEventListener","source","createMediaElementSource","connect","destination","removeEventListener","close","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","style","color","margin","ref","controls","src","onError","e","className","Object","keys","_c","$RefreshReg$"],"sources":["C:/Users/Rahul/guitar_tabs/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './index.css';\r\nimport Fretboard from './Fretboard.js';\r\n\r\nfunction App() {\r\n  const [notes, setNotes] = useState({});\r\n  const [currentNote, setCurrentNote] = useState(null);\r\n  const [audioSrc, setAudioSrc] = useState(null);\r\n  const [timeMap, setTimeMap] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  \r\n  const audioRef = useRef(null);\r\n  const audioContextRef = useRef(null);\r\n  const analyserRef = useRef(null);\r\n  const animationFrameRef = useRef(null);\r\n\r\n  const initializeAudioContext = () => {\r\n    if (!audioContextRef.current) {\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      analyserRef.current.fftSize = 2048;\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) {\r\n      setError('No file selected');\r\n      return;\r\n    }\r\n\r\n    // Reset states\r\n    setError(null);\r\n    setNotes({});\r\n    setTimeMap([]);\r\n    setCurrentNote(null);\r\n    setAudioSrc(null);\r\n    setIsPlaying(false);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      console.log('Uploading file:', file.name);\r\n      const response = await axios.post('http://localhost:3001/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n        validateStatus: false // Don't throw error on non-2xx status\r\n      });\r\n\r\n      console.log('Raw server response:', response.data);\r\n      console.log('Notes received:', response.data.notes);\r\n      console.log('Timing received:', response.data.timing);\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error(\r\n          response.data?.details || \r\n          response.data?.error || \r\n          'Server error'\r\n        );\r\n      }\r\n\r\n      if (!response.data.notes || !response.data.timing) {\r\n        throw new Error('Invalid response format from server');\r\n      }\r\n\r\n      setNotes(response.data.notes);\r\n      setTimeMap(response.data.timing);\r\n      \r\n      // Create audio URL after successful processing\r\n      const audioUrl = URL.createObjectURL(file);\r\n      setAudioSrc(audioUrl);\r\n\r\n    } catch (error) {\r\n      console.error('Full upload error:', error);\r\n      setError(\r\n        error.response?.data?.details || \r\n        error.response?.data?.error ||\r\n        error.message || \r\n        'Error processing file'\r\n      );\r\n      if (audioSrc) {\r\n        URL.revokeObjectURL(audioSrc);\r\n        setAudioSrc(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateFretboard = () => {\r\n    if (!audioRef.current || !timeMap.length || !isPlaying) return;\r\n\r\n    const currentTime = audioRef.current.currentTime;\r\n    \r\n    // Add debug logging\r\n    console.log('Current time:', currentTime);\r\n    \r\n    const currentNotes = timeMap.filter(({ start, end }) => {\r\n      const startTime = parseFloat(start);\r\n      const endTime = parseFloat(end);\r\n      const isInRange = currentTime >= startTime && currentTime <= endTime;\r\n      if (isInRange) {\r\n        console.log(`Note in range: start=${startTime}, end=${endTime}`);\r\n      }\r\n      return isInRange;\r\n    });\r\n\r\n    if (currentNotes.length > 0) {\r\n      console.log('Found current notes:', currentNotes);\r\n      const noteValues = currentNotes.map(note => note.note);\r\n      console.log('Setting current notes:', noteValues);\r\n      setCurrentNote(noteValues);\r\n    } else {\r\n      setCurrentNote(null);\r\n    }\r\n\r\n    animationFrameRef.current = requestAnimationFrame(updateFretboard);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const audio = audioRef.current;\r\n    if (!audio) return;\r\n\r\n    const handlePlay = () => {\r\n      setIsPlaying(true);\r\n      if (audioContextRef.current?.state === 'suspended') {\r\n        audioContextRef.current.resume();\r\n      }\r\n      animationFrameRef.current = requestAnimationFrame(updateFretboard);\r\n    };\r\n\r\n    const handlePause = () => {\r\n      setIsPlaying(false);\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n    };\r\n\r\n    const handleEnded = () => {\r\n      setIsPlaying(false);\r\n      setCurrentNote(null);\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n    };\r\n\r\n    audio.addEventListener('play', handlePlay);\r\n    audio.addEventListener('pause', handlePause);\r\n    audio.addEventListener('ended', handleEnded);\r\n\r\n    // Connect audio to analyser when source changes\r\n    if (audioContextRef.current && analyserRef.current) {\r\n      const source = audioContextRef.current.createMediaElementSource(audio);\r\n      source.connect(analyserRef.current);\r\n      analyserRef.current.connect(audioContextRef.current.destination);\r\n    }\r\n\r\n    return () => {\r\n      audio.removeEventListener('play', handlePlay);\r\n      audio.removeEventListener('pause', handlePause);\r\n      audio.removeEventListener('ended', handleEnded);\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n    };\r\n  }, [timeMap]);\r\n\r\n  // Add debug logging when notes are received\r\n  useEffect(() => {\r\n    console.log('Notes dictionary updated:', notes);\r\n  }, [notes]);\r\n\r\n  // Cleanup\r\n  useEffect(() => {\r\n    return () => {\r\n      if (audioSrc) {\r\n        URL.revokeObjectURL(audioSrc);\r\n      }\r\n      if (animationFrameRef.current) {\r\n        cancelAnimationFrame(animationFrameRef.current);\r\n      }\r\n      if (audioContextRef.current) {\r\n        audioContextRef.current.close();\r\n      }\r\n    };\r\n  }, [audioSrc]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Guitar Tabs App</h1>\r\n      <input \r\n        type=\"file\" \r\n        accept=\"audio/*\"\r\n        onChange={handleFileUpload} \r\n      />\r\n      {error && (\r\n        <div style={{ color: 'red', margin: '10px 0' }}>\r\n          Error: {error}\r\n        </div>\r\n      )}\r\n      {audioSrc && (\r\n        <div>\r\n          <audio \r\n            ref={audioRef} \r\n            controls \r\n            src={audioSrc}\r\n            onError={(e) => {\r\n              console.error('Audio error:', e);\r\n              setError('Error playing audio file');\r\n            }}\r\n          >\r\n            Your browser does not support the audio element.\r\n          </audio>\r\n          <Fretboard \r\n            notes={notes} \r\n            currentNote={currentNote} \r\n            isPlaying={isPlaying}\r\n          />\r\n          <div className=\"debug-info\">\r\n            <p>Current Note: {currentNote || 'None'}</p>\r\n            <p>Total Notes: {Object.keys(notes).length}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,SAAS,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMqB,QAAQ,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMqB,eAAe,GAAGrB,MAAM,CAAC,IAAI,CAAC;EACpC,MAAMsB,WAAW,GAAGtB,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMuB,iBAAiB,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAEtC,MAAMwB,sBAAsB,GAAGA,CAAA,KAAM;IACnC,IAAI,CAACH,eAAe,CAACI,OAAO,EAAE;MAC5BJ,eAAe,CAACI,OAAO,GAAG,KAAKC,MAAM,CAACC,YAAY,IAAID,MAAM,CAACE,kBAAkB,EAAE,CAAC;MAClFN,WAAW,CAACG,OAAO,GAAGJ,eAAe,CAACI,OAAO,CAACI,cAAc,CAAC,CAAC;MAC9DP,WAAW,CAACG,OAAO,CAACK,OAAO,GAAG,IAAI;IACpC;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACxC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;MACThB,QAAQ,CAAC,kBAAkB,CAAC;MAC5B;IACF;;IAEA;IACAA,QAAQ,CAAC,IAAI,CAAC;IACdR,QAAQ,CAAC,CAAC,CAAC,CAAC;IACZM,UAAU,CAAC,EAAE,CAAC;IACdJ,cAAc,CAAC,IAAI,CAAC;IACpBE,WAAW,CAAC,IAAI,CAAC;IACjBM,YAAY,CAAC,KAAK,CAAC;IAEnB,MAAMiB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;IAE7B,IAAI;MACFM,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEP,IAAI,CAACQ,IAAI,CAAC;MACzC,MAAMC,QAAQ,GAAG,MAAMxC,KAAK,CAACyC,IAAI,CAAC,8BAA8B,EAAEP,QAAQ,EAAE;QAC1EQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,cAAc,EAAE,KAAK,CAAC;MACxB,CAAC,CAAC;MAEFN,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEE,QAAQ,CAACI,IAAI,CAAC;MAClDP,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEE,QAAQ,CAACI,IAAI,CAACtC,KAAK,CAAC;MACnD+B,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEE,QAAQ,CAACI,IAAI,CAACC,MAAM,CAAC;MAErD,IAAIL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QAAA,IAAAC,cAAA,EAAAC,eAAA;QAC3B,MAAM,IAAIC,KAAK,CACb,EAAAF,cAAA,GAAAP,QAAQ,CAACI,IAAI,cAAAG,cAAA,uBAAbA,cAAA,CAAeG,OAAO,OAAAF,eAAA,GACtBR,QAAQ,CAACI,IAAI,cAAAI,eAAA,uBAAbA,eAAA,CAAelC,KAAK,KACpB,cACF,CAAC;MACH;MAEA,IAAI,CAAC0B,QAAQ,CAACI,IAAI,CAACtC,KAAK,IAAI,CAACkC,QAAQ,CAACI,IAAI,CAACC,MAAM,EAAE;QACjD,MAAM,IAAII,KAAK,CAAC,qCAAqC,CAAC;MACxD;MAEA1C,QAAQ,CAACiC,QAAQ,CAACI,IAAI,CAACtC,KAAK,CAAC;MAC7BO,UAAU,CAAC2B,QAAQ,CAACI,IAAI,CAACC,MAAM,CAAC;;MAEhC;MACA,MAAMM,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACtB,IAAI,CAAC;MAC1CpB,WAAW,CAACwC,QAAQ,CAAC;IAEvB,CAAC,CAAC,OAAOrC,KAAK,EAAE;MAAA,IAAAwC,eAAA,EAAAC,oBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACdpB,OAAO,CAACvB,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1CC,QAAQ,CACN,EAAAuC,eAAA,GAAAxC,KAAK,CAAC0B,QAAQ,cAAAc,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBV,IAAI,cAAAW,oBAAA,uBAApBA,oBAAA,CAAsBL,OAAO,OAAAM,gBAAA,GAC7B1C,KAAK,CAAC0B,QAAQ,cAAAgB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBZ,IAAI,cAAAa,qBAAA,uBAApBA,qBAAA,CAAsB3C,KAAK,KAC3BA,KAAK,CAAC4C,OAAO,IACb,uBACF,CAAC;MACD,IAAIhD,QAAQ,EAAE;QACZ0C,GAAG,CAACO,eAAe,CAACjD,QAAQ,CAAC;QAC7BC,WAAW,CAAC,IAAI,CAAC;MACnB;IACF;EACF,CAAC;EAED,MAAMiD,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAAC1C,QAAQ,CAACK,OAAO,IAAI,CAACX,OAAO,CAACiD,MAAM,IAAI,CAAC7C,SAAS,EAAE;IAExD,MAAM8C,WAAW,GAAG5C,QAAQ,CAACK,OAAO,CAACuC,WAAW;;IAEhD;IACAzB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEwB,WAAW,CAAC;IAEzC,MAAMC,YAAY,GAAGnD,OAAO,CAACoD,MAAM,CAAC,CAAC;MAAEC,KAAK;MAAEC;IAAI,CAAC,KAAK;MACtD,MAAMC,SAAS,GAAGC,UAAU,CAACH,KAAK,CAAC;MACnC,MAAMI,OAAO,GAAGD,UAAU,CAACF,GAAG,CAAC;MAC/B,MAAMI,SAAS,GAAGR,WAAW,IAAIK,SAAS,IAAIL,WAAW,IAAIO,OAAO;MACpE,IAAIC,SAAS,EAAE;QACbjC,OAAO,CAACC,GAAG,CAAC,wBAAwB6B,SAAS,SAASE,OAAO,EAAE,CAAC;MAClE;MACA,OAAOC,SAAS;IAClB,CAAC,CAAC;IAEF,IAAIP,YAAY,CAACF,MAAM,GAAG,CAAC,EAAE;MAC3BxB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEyB,YAAY,CAAC;MACjD,MAAMQ,UAAU,GAAGR,YAAY,CAACS,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACA,IAAI,CAAC;MACtDpC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEiC,UAAU,CAAC;MACjD9D,cAAc,CAAC8D,UAAU,CAAC;IAC5B,CAAC,MAAM;MACL9D,cAAc,CAAC,IAAI,CAAC;IACtB;IAEAY,iBAAiB,CAACE,OAAO,GAAGmD,qBAAqB,CAACd,eAAe,CAAC;EACpE,CAAC;EAED7D,SAAS,CAAC,MAAM;IACd,MAAM4E,KAAK,GAAGzD,QAAQ,CAACK,OAAO;IAC9B,IAAI,CAACoD,KAAK,EAAE;IAEZ,MAAMC,UAAU,GAAGA,CAAA,KAAM;MAAA,IAAAC,qBAAA;MACvB5D,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI,EAAA4D,qBAAA,GAAA1D,eAAe,CAACI,OAAO,cAAAsD,qBAAA,uBAAvBA,qBAAA,CAAyBC,KAAK,MAAK,WAAW,EAAE;QAClD3D,eAAe,CAACI,OAAO,CAACwD,MAAM,CAAC,CAAC;MAClC;MACA1D,iBAAiB,CAACE,OAAO,GAAGmD,qBAAqB,CAACd,eAAe,CAAC;IACpE,CAAC;IAED,MAAMoB,WAAW,GAAGA,CAAA,KAAM;MACxB/D,YAAY,CAAC,KAAK,CAAC;MACnB,IAAII,iBAAiB,CAACE,OAAO,EAAE;QAC7B0D,oBAAoB,CAAC5D,iBAAiB,CAACE,OAAO,CAAC;MACjD;IACF,CAAC;IAED,MAAM2D,WAAW,GAAGA,CAAA,KAAM;MACxBjE,YAAY,CAAC,KAAK,CAAC;MACnBR,cAAc,CAAC,IAAI,CAAC;MACpB,IAAIY,iBAAiB,CAACE,OAAO,EAAE;QAC7B0D,oBAAoB,CAAC5D,iBAAiB,CAACE,OAAO,CAAC;MACjD;IACF,CAAC;IAEDoD,KAAK,CAACQ,gBAAgB,CAAC,MAAM,EAAEP,UAAU,CAAC;IAC1CD,KAAK,CAACQ,gBAAgB,CAAC,OAAO,EAAEH,WAAW,CAAC;IAC5CL,KAAK,CAACQ,gBAAgB,CAAC,OAAO,EAAED,WAAW,CAAC;;IAE5C;IACA,IAAI/D,eAAe,CAACI,OAAO,IAAIH,WAAW,CAACG,OAAO,EAAE;MAClD,MAAM6D,MAAM,GAAGjE,eAAe,CAACI,OAAO,CAAC8D,wBAAwB,CAACV,KAAK,CAAC;MACtES,MAAM,CAACE,OAAO,CAAClE,WAAW,CAACG,OAAO,CAAC;MACnCH,WAAW,CAACG,OAAO,CAAC+D,OAAO,CAACnE,eAAe,CAACI,OAAO,CAACgE,WAAW,CAAC;IAClE;IAEA,OAAO,MAAM;MACXZ,KAAK,CAACa,mBAAmB,CAAC,MAAM,EAAEZ,UAAU,CAAC;MAC7CD,KAAK,CAACa,mBAAmB,CAAC,OAAO,EAAER,WAAW,CAAC;MAC/CL,KAAK,CAACa,mBAAmB,CAAC,OAAO,EAAEN,WAAW,CAAC;MAC/C,IAAI7D,iBAAiB,CAACE,OAAO,EAAE;QAC7B0D,oBAAoB,CAAC5D,iBAAiB,CAACE,OAAO,CAAC;MACjD;IACF,CAAC;EACH,CAAC,EAAE,CAACX,OAAO,CAAC,CAAC;;EAEb;EACAb,SAAS,CAAC,MAAM;IACdsC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEhC,KAAK,CAAC;EACjD,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACAP,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAIW,QAAQ,EAAE;QACZ0C,GAAG,CAACO,eAAe,CAACjD,QAAQ,CAAC;MAC/B;MACA,IAAIW,iBAAiB,CAACE,OAAO,EAAE;QAC7B0D,oBAAoB,CAAC5D,iBAAiB,CAACE,OAAO,CAAC;MACjD;MACA,IAAIJ,eAAe,CAACI,OAAO,EAAE;QAC3BJ,eAAe,CAACI,OAAO,CAACkE,KAAK,CAAC,CAAC;MACjC;IACF,CAAC;EACH,CAAC,EAAE,CAAC/E,QAAQ,CAAC,CAAC;EAEd,oBACEP,OAAA;IAAAuF,QAAA,gBACEvF,OAAA;MAAAuF,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB3F,OAAA;MACE4F,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,SAAS;MAChBC,QAAQ,EAAEpE;IAAiB;MAAA8D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,EACDhF,KAAK,iBACJX,OAAA;MAAK+F,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAS,CAAE;MAAAV,QAAA,GAAC,SACvC,EAAC5E,KAAK;IAAA;MAAA6E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CACN,EACApF,QAAQ,iBACPP,OAAA;MAAAuF,QAAA,gBACEvF,OAAA;QACEkG,GAAG,EAAEnF,QAAS;QACdoF,QAAQ;QACRC,GAAG,EAAE7F,QAAS;QACd8F,OAAO,EAAGC,CAAC,IAAK;UACdpE,OAAO,CAACvB,KAAK,CAAC,cAAc,EAAE2F,CAAC,CAAC;UAChC1F,QAAQ,CAAC,0BAA0B,CAAC;QACtC,CAAE;QAAA2E,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACR3F,OAAA,CAACF,SAAS;QACRK,KAAK,EAAEA,KAAM;QACbE,WAAW,EAAEA,WAAY;QACzBQ,SAAS,EAAEA;MAAU;QAAA2E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACF3F,OAAA;QAAKuG,SAAS,EAAC,YAAY;QAAAhB,QAAA,gBACzBvF,OAAA;UAAAuF,QAAA,GAAG,gBAAc,EAAClF,WAAW,IAAI,MAAM;QAAA;UAAAmF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5C3F,OAAA;UAAAuF,QAAA,GAAG,eAAa,EAACiB,MAAM,CAACC,IAAI,CAACtG,KAAK,CAAC,CAACuD,MAAM;QAAA;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzF,EAAA,CA/NQD,GAAG;AAAAyG,EAAA,GAAHzG,GAAG;AAiOZ,eAAeA,GAAG;AAAC,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}