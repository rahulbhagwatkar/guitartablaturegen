{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rahul\\\\guitar_tabs\\\\src\\\\Fretboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './Fretboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fretboard = ({\n  notes,\n  currentNote,\n  isPlaying\n}) => {\n  _s();\n  const strings = ['e', 'B', 'G', 'D', 'A', 'E'];\n  const frets = Array.from({\n    length: 12\n  }, (_, i) => i);\n  useEffect(() => {\n    console.log('Fretboard received notes:', notes);\n    console.log('Current note:', currentNote);\n  }, [notes, currentNote]);\n  const isNoteActive = (string, fret) => {\n    if (!currentNote || !notes) {\n      console.log('No current note or notes');\n      return false;\n    }\n    const activeNotes = Array.isArray(currentNote) ? currentNote : [currentNote];\n    console.log('Active notes:', activeNotes);\n    return activeNotes.some(noteName => {\n      const positions = notes[noteName] || [];\n      console.log(`Positions for note ${noteName}:`, positions);\n      return positions.some(pos => pos.string === string && pos.fret === fret);\n    });\n  };\n\n  // Calculate note marker position based on string and fret\n  const getNotePosition = (string, fret) => {\n    const stringIndex = strings.indexOf(string);\n    const stringPosition = 10 + stringIndex * 15;\n    const fretPosition = fret * 8.33 + 4; // Adjust based on fret width\n    return {\n      top: `${stringPosition}%`,\n      left: `${fretPosition}%`\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fretboard\",\n    children: [frets.map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `fret fret-${i + 1}`\n    }, `fret-${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)), strings.map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `string string-${i + 1}`\n    }, `string-${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)), strings.map(string => frets.map(fret => {\n      const isActive = isNoteActive(string, fret);\n      if (isActive) {\n        console.log(`Rendering note at string ${string}, fret ${fret}`);\n      }\n      return isActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `note-marker ${isPlaying ? 'playing' : ''}`,\n        style: getNotePosition(string, fret)\n      }, `note-${string}-${fret}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this) : null;\n    }))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Fretboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Fretboard;\nexport default Fretboard;\nvar _c;\n$RefreshReg$(_c, \"Fretboard\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","Fretboard","notes","currentNote","isPlaying","_s","strings","frets","Array","from","length","_","i","console","log","isNoteActive","string","fret","activeNotes","isArray","some","noteName","positions","pos","getNotePosition","stringIndex","indexOf","stringPosition","fretPosition","top","left","className","children","map","fileName","_jsxFileName","lineNumber","columnNumber","isActive","style","_c","$RefreshReg$"],"sources":["C:/Users/Rahul/guitar_tabs/src/Fretboard.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport './Fretboard.css';\r\n\r\nconst Fretboard = ({ notes, currentNote, isPlaying }) => {\r\n  const strings = ['e', 'B', 'G', 'D', 'A', 'E'];\r\n  const frets = Array.from({ length: 12 }, (_, i) => i);\r\n\r\n  useEffect(() => {\r\n    console.log('Fretboard received notes:', notes);\r\n    console.log('Current note:', currentNote);\r\n  }, [notes, currentNote]);\r\n\r\n  const isNoteActive = (string, fret) => {\r\n    if (!currentNote || !notes) {\r\n      console.log('No current note or notes');\r\n      return false;\r\n    }\r\n    \r\n    const activeNotes = Array.isArray(currentNote) ? currentNote : [currentNote];\r\n    console.log('Active notes:', activeNotes);\r\n    \r\n    return activeNotes.some(noteName => {\r\n      const positions = notes[noteName] || [];\r\n      console.log(`Positions for note ${noteName}:`, positions);\r\n      return positions.some(pos => pos.string === string && pos.fret === fret);\r\n    });\r\n  };\r\n\r\n  // Calculate note marker position based on string and fret\r\n  const getNotePosition = (string, fret) => {\r\n    const stringIndex = strings.indexOf(string);\r\n    const stringPosition = 10 + (stringIndex * 15);\r\n    const fretPosition = (fret * 8.33) + 4; // Adjust based on fret width\r\n    return { top: `${stringPosition}%`, left: `${fretPosition}%` };\r\n  };\r\n\r\n  return (\r\n    <div className=\"fretboard\">\r\n      {/* Render frets first */}\r\n      {frets.map((_, i) => (\r\n        <div key={`fret-${i}`} className={`fret fret-${i + 1}`} />\r\n      ))}\r\n      \r\n      {/* Render strings */}\r\n      {strings.map((_, i) => (\r\n        <div key={`string-${i}`} className={`string string-${i + 1}`} />\r\n      ))}\r\n      \r\n      {/* Render note markers */}\r\n      {strings.map((string) =>\r\n        frets.map((fret) => {\r\n          const isActive = isNoteActive(string, fret);\r\n          if (isActive) {\r\n            console.log(`Rendering note at string ${string}, fret ${fret}`);\r\n          }\r\n          return isActive ? (\r\n            <div\r\n              key={`note-${string}-${fret}`}\r\n              className={`note-marker ${isPlaying ? 'playing' : ''}`}\r\n              style={getNotePosition(string, fret)}\r\n            />\r\n          ) : null;\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fretboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}